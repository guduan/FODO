#!/bin/csh -f
set nonomatch


elegant test1.ele >> test.log
elegant test2.ele >> test.log
elegant test3.ele >> test.log

sddsconvert -ascii test1.mat -nowarnings
sddsconvert -ascii test2.mat -nowarnings
sddsconvert -ascii test3.mat -nowarnings

# get bpm&quad positions and input error values
sddsprocess -pipe=out test1.erl -match=col,ElementType=MONI  -match=col,ElementParameter=DX \
	| sddsprintout -pipe=in -col=ParameterValue -width=9999 test.realbpmoffset
sddsprocess -pipe=out test1.erl  -match=col,ElementType=QUAD -match=col,ElementParameter=DX \
	| sddsprintout -pipe=in -col=ParameterValue -width=9999 test.realquadoffset
sddsprocess -pipe=out test1.erl  -match=col,ElementType=MALIGN -match=col,ElementParameter=DX* \
	| sddsprintout -pipe=in -col=ParameterValue -width=9999 test.realinitial
	
sddsprocess  -pipe=out test1.cen -match=col,ElementType=MONI \
	| sddsconvert -pipe=in -ascii -retain=col,s,ElementName,ElementType,ElementOccurence -fromPage=1 -toPage=1 test.bpmlocation
sddsprocess  -pipe=out test1.cen -match=col,ElementType=QUAD\
	| sddsconvert -pipe=in -ascii -retain=col,s,ElementName,ElementType,ElementOccurence -fromPage=1 -toPage=1 test.quadlocation

sddsprocess -pipe=out test1.erl -match=col,ElementType=MONI  -match=col,ElementParameter=DX \
	| sddsxref -pipe=in test.bpmlocation test.realbpmoffset1 -take=s
sddsprocess -pipe=out test1.erl  -match=col,ElementType=QUAD -match=col,ElementParameter=DX \
	| sddsxref -pipe=in test.quadlocation test.realquadoffset1 -take=s
	
#sddsplot -col=s,ParameterValue  test.realbpmoffset1 -graph=symbol,type=1,subtype=1 -legend=spec=realbpmoffset \
#              -col=s,ParameterValue test.realquadoffset1 -graph=symbol,type=2,subtype=3 -legend=spec=realquadoffset
	
# get the BPM readings @ each energy(CAUTION!! not the real BPM readings, too bad, they are just
# readings WITHOUT BPM offsets
sddsprocess -pipe=out test1.cen -match=col,ElementType=MONI  \
	| sddsconvert -pipe -ascii -retain=col,s,Cx,ElementName -fromPage=1 -toPage=1 \
	| sdds2plaindata -pipe=in  -outputMode=ascii -col=s -col=ElementName -col=Cx -noRowCount -separator='  '  test1.orbit
sddsprocess -pipe=out test2.cen -match=col,ElementType=MONI \
	| sddsconvert -pipe -ascii -retain=col,s,Cx,ElementName -fromPage=1 -toPage=1 \
	| sdds2plaindata -pipe=in  -outputMode=ascii -col=s -col=ElementName -col=Cx -noRowCount -separator='  '  test2.orbit
sddsprocess -pipe=out test3.cen -match=col,ElementType=MONI \
	| sddsconvert -pipe -ascii -retain=col,s,Cx,ElementName  -fromPage=1 -toPage=1 \
	| sdds2plaindata -pipe=in  -outputMode=ascii -col=s -col=ElementName -col=Cx -noRowCount -separator='  '  test3.orbit

